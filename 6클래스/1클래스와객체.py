

#1. 클래스 class란?
#   우리는 앞서 함수란 하나의 특정 작업을 수행하기 위해 독립적으로 설계된 프로그램 코드라고 배웠습니다.
#   이처럼 함수 뿐만 아니라 관련된 변수까지도 한꺼번에 묶어서 관리하고 재사용할 수 있게해주는것.
#   무엇인가를 계속해서 만들어갈 수 있는 설계 도면(틀)클래스라고 합니다.
#   클래스의 예) 붕어빵을 계속해서 찍어 낼 수 있는 틀(클래스)
#   클래스의 예) 과자 틀(클래스)
# -----------------------------------------------------
#2. 객체(Object)란?
#   객체의 예) 붕어빵 틀(클래스)에서 찍혀 나온 맛있는 붕어빵 하나하나(객체)
#   객체의 예) 과자 틀(클래스)을 사용해 만든 과자(객체)
# -----------------------------------------------------
#3. 속성 attribute과 메서드method란?
#   이때 클래스에 포함된 변수를 속성(attribute)라고 부르며,
#   클래스에 포함되는 함수를 메서드(method)라고 부릅니다.

# 예를 들어 은행업무를 클래스로 작성하면?
#   속성으로는 계좌번호, 소유주, 잔액, 이자율 등이 있을 수 있으며,
#   메서드는 입금하기, 출금하기, 이체하기 등을 만들 수 있을것

# 결론 : 이처럼 우리가 실생활에서 접할수 있는 무언가를 속성과 메서드로 분리하여
#       분석해 보는 연습을 자주 한다면 이후에 클래스 설계도를 만드는데 훨씬 많은 도우밍 될 수 있음.
# -----------------------------------------------------

#4. 클래스 선언하기
#   파이썬에서는 class키워드를 사용하여 클래스를 선언할 수 있으며,
#   그 내부에서 def키워드를 사용해 메서드를 선언할 수 있다.
#   속성은 변수를 선언하는 일반적인 방법과 같은 방법으로 선언할 수 있다.

# 예제1. 클래스 선언하기
class Dog:
    # 속성선언(변수선언)
    name ="삼식이"
    age =3
    breed ="골든 리트리버"
    # 메서드 선언
    def bark(self):
        print(self.name + "가 멍멍하고 짖는다.")

# 설명 : 위의 예제에서 작성한 Dog클래스는 name, age, breed라는 3개의 속성과
# bark()라는 하나의 메서드로 구성됨
# bark()메서드 선언시 매개변수로 사용된 self매개변수는 자바의 this키워드와 마찬가지로
# 객체가 자기 자신을 참조하는데 사용
# 즉, self매개변수를 사용하면
# 메서드에서 클래스에 정의돈 모든 속성 및 다른 메서드에 접근하 수 있는ㄴ 것
# 예를 들어 print() 구문안에 self.name의 self매개변수를 사용하여 클래스의 name 속성에
# 접근하고 있음을 알 수 있다.

#5. 인스턴스 생성하기
# 인스턴스란 클래스를 기반으로 생성된 객체

# 인스턴스 생성하기 문법
# 인스턴스먕 = 클래스명()
# 설명 : 파이썬에서는 클래스명에 소괄호()를 사용하여 해당 클래스의 인스턴스를 생성할 수 있다.
#       생성된 인스턴스에 . (닷) 연산자를 사용하면 해당 클래스의 속성이나 메서드 호출 가능

# 예제2. Dog인스턴스 생성
my_dog = Dog() #my_do는 객체이면서 동시에 Dog클래스의 인스턴스를 생성

# 인스턴스의 속성에 접근하여 값을 출력
print(my_dog.breed)
# 생성된 인스턴스를 가지고 클래스의 메서드 호출 가능.
my_dog.bark()



